<!-- 

    담당자 : 이승현
    함수 설명 : 각 페이지에 공통적으로 들어가는 navigation을 뽑아 ejs의 <%- include %>를 활용하여 넣어준다. 
    페이지 설명 : 전 페이지 공통 적용 Header
    기능 설명 :  1. 각 페이지로 이동하는 기능   // 승현
                2. 로그아웃 기능 - [로그인 페이지로 이동]   // 승현
                3. 이용자 관리 페이지 이동 버튼 - [관리자만 표시]   // 건희
                4. favicon 넣기     // 승현 - 아직 못했어요.

 -->
 <!DOCTYPE html>
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!--=============== FAVICON ===============-->
    <link rel="apple-touch-icon" sizes="180x180" href="img/favicon_package/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="img/favicon_package/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="img/favicon_package/favicon-16x16.png">
    <link rel="manifest" href="img/favicon_package/site.webmanifest">
    <link rel="mask-icon" href="img/favicon_package/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">

    <!--=============== REMIX ICONS ===============-->
    <link href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css" rel="stylesheet">

    <!--=============== JQUERY ===============-->
    <script src="js/jquery.min.js"></script>

    <!--============= AJAX JQUERY =============-->
    <script src="https://code.jquery.com/jquery-3.6.1.js" integrity="sha256-3zlB5s2uwoUzrXK3BT7AX3FyvojsraNFxCc2vC/7pNI=" crossorigin="anonymous"></script>
    
    <!--=============== FONTAWESOME ===============-->
    <link rel="stylesheet" href="/css/fontawesome-free-6.2.0-web/css/all.min.css">

    <!--=============== CSS ===============-->
    <link rel="stylesheet" href="css/partials/header.css">
  <title>상단 메뉴</title>
</head>
<body>
  <!--==================== HEADER ====================-->
  <header class="header" id="header">
    <nav class="nav container">
        <a href="/index" class="nav__logo" indexPage()>
            <i class="fa-solid fa-microchip"></i>R.Z.A
        </a>

        <div class="nav__menu-login" id="nav-menu-login">
            <ul class="nav__list nav__menu-login__ul">
                <li class="nav__item nav__menu-login__li userInfo">
                    <a href="" class="nav__link nav__menu-login__a"><%= hellow %></a>
                </li>

                <li class="nav__item nav__menu-login__li logout">
                    <a href="/" onclick='logoutPage()' class="nav__link nav__menu-login__a">로그아웃</a>
                </li>
                <!-- 관리자에게만 보이게 권한 부여할 것! -->
                <li class="nav__item nav__menu-login__li">
                    <a href="/userManagement" onclick='userManagementPage()' class="nav__link nav__menu-login__a">이용자 관리</a>
                </li>
            </ul>
        </div>
        <div class="nav__menu" id="nav-menu">
            <ul class="nav__list">
                <li class="nav__item">
                    <a href="/index" onclick='stockManagementPage()' class="nav__link">물품 관리</a>
                </li>
                <li class="nav__item">
                    <a href="/stockRegistration" onclick='stockRegistrationPage()' class="nav__link">물품 등록</a>
                </li>
                <li class="nav__item">
                    <a href="/index" onclick='allRentalStatusPage()' class="nav__link active-link">대여 현황</a>
                </li>
                <li class="nav__item">
                    <a href="/myRentalStatus" onclick='myRentalStatusPage()' class="nav__link">마이페이지</a>
                </li>
            </ul>

            <!-- 모바일 네비게이션 close 버튼 -->
            <div class="nav__close" id="nav-close">
                <i class="ri-close-line"></i>
            </div>
        </div>

            <div class="nav__btns">
                <!-- 다크모드 변경 버튼 -->
                <i class="ri-moon-line change-theme" id="theme-button"></i>
                <!-- 모바일 네비게이션 opne 버튼 -->
                <div class="nav__toggle" id="nav-toggle">
                    <i class="ri-menu-line"></i>
                </div>
            </div>
        </nav>
</header> 
<script>
    /******************************************************************************
     * 담당자      : 이승현
     * Function명  : logoutPage(), stockManagementPage(), 
     *               stockRegistrationPage(), allRentalStatusPage()
     * 함수 설명   : document.location.href를 통해 이동할 페이지를 지정해 준다.
     * 기능 설명   : 1. 각 페이지로 이동하는 기능  
     *              [각 메뉴] 버튼 클릭 시 메인 화면으로 Redirect 하기
     *            
    *******************************************************************************/ 
    /*=============== 메인 index ===============*/
    function indexPage()  {
        document.location.href = "/index.ejs";
    }
    
    /*=============== 물품 관리 ===============*/
    function stockManagementPage()  {
        document.location.href = "/index.ejs";
    }
    /*=============== 물품 등록 ===============*/
    function stockRegistrationPage()  {
        $.ajax({
        type : "GET",                       // HTTP method type(GET, POST) 형식이다.
         url : "/stockRegistration",        // 컨트롤러에서 대기중인 URL 주소이다.
         data : params,                     // Json 형식의 데이터이다.
         success : function(res){           // 비동기통신의 성공일경우 success콜백으로 들어옵니다. 'res'는 응답받은 데이터이다.
             // 응답코드 > 0000
             if(res.logoutsuccess!=false){
                
                window.location.replace("/stockRegistration");}
            else{
                res.status(500).json({message:"화면 이동에 문제가 발생했습니다."})   
            }
        },
        // 비동기 통신이 실패할경우 error 콜백으로 들어옵니다.
         error : function(XMLHttpRequest, textStatus, errorThrown){ 
            console.log(XMLHttpRequest, textStatus, errorThrown) 
             alert("통신 실패.")
        }
        });
        document.location.href = "/stockRegistration.ejs";
    }
    /*=============== 대여 현황 ===============*/
    function allRentalStatusPage()  {
        document.location.href = "/index.ejs";
    }
    /*=============== 마이페이지(나의 대여 현황) ===============*/
    function myRentalStatusPage()  {
        document.location.href = "/myRentalStatus.ejs";
    }

    /******************************************************************************
     * 담당자      : 이승현
     * Function명  : userManagementPage()
     * 함수 설명   : document.location.href를 통해 이동할 페이지를 지정해 준다.
     * 기능 설명   : [이용자 관리] - 관리자만 표시되게 한다.
     *            
    *******************************************************************************/

    /*=============== 이용자 관리 페이지 - [관리자만 표시] ===============*/
    function userManagementPage()  {
        document.location.href = "/userManagement.ejs";
    }
    /******************************************************************************
     * 담당자      : 이승현
     * 함수 설명   : toggle 함수를 사용해서 버튼을 클릭할 때마다 
     *              다크모드 속성이 추가되고, 빠지고 반복 형태이다
     * 기능 설명   : 달 모양 버튼을 클릭하면 다크모드로 변경되면서, 
     *              해 모양 이모티콘으로 바뀌고 다크모드 적용된다.
     *              그 후로 다크모드, 라이트모드 toggle
     *            
    *******************************************************************************/

    /*=============== DARK LIGHT THEME. 다크, 라이트 모드 ===============*/ 
    const themeButton = document.getElementById('theme-button')
    const darkTheme = 'dark-theme'
    const iconTheme = 'ri-sun-line'

    // 이전에 선택한 항목(사용자가 선택한 경우)
    const selectedTheme = localStorage.getItem('selected-theme')
    const selectedIcon = localStorage.getItem('selected-icon')

    // 다크 테마 클래스를 승인함으로써 인터페이스가 가지고 있는 현재 테마를 얻음
    const getCurrentTheme = () => document.body.classList.contains(darkTheme) ? 'dark' : 'light'
    const getCurrentIcon = () => themeButton.classList.contains(iconTheme) ? 'ri-moon-line' : 'ri-sun-line'

    //사용자가 이전에 주제를 선택했는지 확인
    if (selectedTheme) {
    // 유효성 검사가 수행될 경우 다크모드를 활성화했는지 비활성화했는지 여부를 확인하는 데 어떤 문제가 있었는지를 묻기
    document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](darkTheme)
    themeButton.classList[selectedIcon === 'ri-moon-line' ? 'add' : 'remove'](iconTheme)
    }

    // 버튼을 사용하여 테마를 수동으로 활성화/비활성화
    themeButton.addEventListener('click', () => {
        // 어두운/아이콘 테마 추가 또는 제거
        document.body.classList.toggle(darkTheme)
        themeButton.classList.toggle(iconTheme)
        // 사용자가 선택한 테마와 현재 아이콘을 저장
        localStorage.setItem('selected-theme', getCurrentTheme())
        localStorage.setItem('selected-icon', getCurrentIcon())
    })
    /******************************************************************************
     * 담당자      : 이승현
     * Function명  : linkAction(), scrollHeader()
     * 함수 설명   : addEventListener로 add, remove 함수 및 클릭 이벤트를 
     *              사용하여 nav toggle 효과를 주었고,
     *              scroll event를 부여했다.
     * 기능 설명   : 1. 모바일에서 상단 메뉴가 사라지고 버튼 클릭 시 나타난다.
     *              2. 스크롤을 80viewport 이상 내리면 헤더 아랫 부분 은은한 그림자를 주어
     *                 헤더 영역을 돋보이게 만든다.
     *            
    *******************************************************************************/
    /*=============== 반응형. SHOW MENU ===============*/
    const navMenu = document.getElementById('nav-menu'),
        navToggle = document.getElementById('nav-toggle'),
        navClose = document.getElementById('nav-close')

    /*===== MENU SHOW. 메뉴 보이기 =====*/
    if(navToggle){
        navToggle.addEventListener('click', () =>{
            navMenu.classList.add('show-menu')
        })
    }

    /*===== MENU HIDDEN. 메뉴 닫기 =====*/
    if(navClose){
        navClose.addEventListener('click', () =>{
            navMenu.classList.remove('show-menu')
        })
    }

    /*=============== REMOVE MENU MOBILE. 모바일에서 메뉴 toggle ===============*/
    const navLink = document.querySelectorAll('.nav__link')

    function linkAction(){
        const navMenu = document.getElementById('nav-menu')
        // 각 nav__link를 클릭하면 show-menu 클래스가 제거됨
        navMenu.classList.remove('show-menu')
    }
    navLink.forEach(n => n.addEventListener('click', linkAction))

    /*=============== CHANGE BACKGROUND HEADER. header 배경 변경 ===============*/
    function scrollHeader(){
        const header = document.getElementById('header')
        // 스크롤 높이가 80 veiwport 보다 크면 header 태그에 scroll-header class 를 추가한다.
        if(this.scrollY >= 80) header.classList.add('scroll-header'); 
        else header.classList.remove('scroll-header')
    }
    window.addEventListener('scroll', scrollHeader)

    
    /*=============== 로그아웃 ===============*/
    function logoutPage()  {
        $.ajax({
        type : "GET",            // HTTP method type(GET, POST) 형식이다.
         url : "/logout",      // 컨트롤러에서 대기중인 URL 주소이다.
         data : params,            // Json 형식의 데이터이다.
         success : function(res){ // 비동기통신의 성공일경우 success콜백으로 들어옵니다. 'res'는 응답받은 데이터이다.
             // 응답코드 > 0000
             if(res.logoutsuccess!=false){
                alert("logout 성공");
                window.location.replace("/login");} // 성공 시 login 페이지로 이동
            else{
                alert("logout실패");}
        },
         error : function(XMLHttpRequest, textStatus, errorThrown){ // 비동기 통신이 실패할경우 error 콜백으로 들어옵니다.
             alert("통신 실패.")
        }
        });
        // document.location.href = "/logout.ejs";
    }

</script>
</body>
</html>